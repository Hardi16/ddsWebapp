import React, { useState, useEffect } from "react";
import { Button, Badge } from "react-bootstrap";
import styles from "./Styles.module.css";
import classes from "../pages/DischargeSummary/DischargeSummary.module.css";
import { hostAddress } from "../assets/config";
import { currentServer } from "../assets/config";
import { Redirect } from "react-router";
import HamburgerDropdown from "./HamburgerDropdown";
import SearchDiagnosis from "./SearchDiagnosis";
import axios from "axios";
import convert from "xml-js";

const DSCreateLeftPaneFamilyHistory = (props) => {
  const [
    historyOfPresentIllnessContent,
    setHistoryOfPresentIllnessContent,
  ] = useState(null);
  const [prompt, setPrompt] = useState(null);

  let pageNumber =
    localStorage.getItem("historyOfIllnessPageNumber") == null
      ? 0
      : localStorage.getItem("historyOfIllnessPageNumber");

  useEffect(() => {
    renderPhysicalExamListTwo();
  }, [props.leftPrompt, prompt]);

  const renderPhysicalExamListTwo = () => {
    let historyOfIllnessSelectedOne = localStorage.getItem(
      "historyOfIllnessSelectedOne"
    );
    let historyOfIllnessSelectedOneId = localStorage.getItem(
      "historyOfIllnessSelectedOneId"
    );
    let data = {
      Complaint: "Labour Pain with Discharge",
      complaint_id: "18000",
    };

    let allPagesOfSelectedOne = [];
    if (localStorage.getItem("historyOfIllnessPages") != null) {
      allPagesOfSelectedOne = JSON.parse(
        localStorage.getItem("historyOfIllnessPages")
      );
      renderSubsequentScreenPanes(allPagesOfSelectedOne);
    } else {
      axios.defaults.headers.common["X-Requested-With"] = "XMLHttpRequest";
      axios
        .put(
          hostAddress +
            currentServer +
            "/RestEasy/PatientWebService/fetchComplaintQuestionnaire",
          data
        )
        .then((response) => {
          console.log("fetchComplaintQuestionnaire resp", response.data);
          allPagesOfSelectedOne = response.data["Complaint"];
          let obj =
            localStorage.getItem("historyOfIllnessPages") != null
              ? JSON.parse(localStorage.getItem("historyOfIllnessPages"))
              : {};
          obj = allPagesOfSelectedOne;
          localStorage.setItem("historyOfIllnessPages", JSON.stringify(obj));
          renderSubsequentScreenPanes(allPagesOfSelectedOne);
        })

        .catch((err) => console.log("err", err));
    }
  };

  const renderSubsequentScreenPanes = (allPagesOfSelectedOne) => {
    let historyOfIllnessSelectedOne = localStorage.getItem(
      "historyOfIllnessSelectedOne"
    );

    let sectionContent = [];
    let mainHeading = [];
    console.log("allPagesOfSelectedOne", allPagesOfSelectedOne);
    allPagesOfSelectedOne = allPagesOfSelectedOne.filter(
      (item) => item["question"].trim() == "Family History"
    );
    for (let i in allPagesOfSelectedOne) {
      mainHeading[i] = allPagesOfSelectedOne[i]["question"].trim();
      let sectionsOfThePage = JSON.parse(
        allPagesOfSelectedOne[i]["questionOptionsXml"]
      )["subitems"];
      console.log(
        mainHeading[i],
        ",",
        JSON.parse(allPagesOfSelectedOne[i]["questionOptionsXml"])
      );
      sectionContent[i] =
        sectionsOfThePage == null
          ? allPagesOfSelectedOne[i]["questionOptionsXml"] == null
            ? null
            : JSON.parse(allPagesOfSelectedOne[i]["questionOptionsXml"])[
                "optionValue"
              ].map((val) => {
                return (
                  <Button className={styles.genSecBtn} onClick={() => {}}>
                    {val["displayLabel"]}
                  </Button> //for ent section
                );
              })
          : sectionsOfThePage.map((ele) => {
              return (
                <div
                  className={
                    ele["optionValue"] == null
                      ? styles.generalsSectionRow
                      : styles.generalsSection
                  }
                >
                  <div className={styles.generalSecionLabel}>
                    {ele["itemName"]}
                  </div>
                  <div className={styles.generalsSectionBtnGrp}>
                    {ele["optionValue"] == null ? (
                      <form>
                        <input
                          type="text"
                          placeholder="Type Here"
                          className={styles.vitalsTextArea}
                        ></input>
                      </form> //text field option
                    ) : (
                      ele["optionValue"].map((val) => {
                        return (
                          <Button
                            className={
                              localStorage.getItem("familyHistoryObj") ==
                                null ||
                              JSON.parse(
                                localStorage.getItem("familyHistoryObj")
                              )[ele["itemName"]] == null ||
                              JSON.parse(
                                localStorage.getItem("familyHistoryObj")
                              )[ele["itemName"]][val["displayLabel"]] == null ||
                              !JSON.parse(
                                localStorage.getItem("familyHistoryObj")
                              )[ele["itemName"]][val["displayLabel"]]
                                ? styles.genSecBtn
                                : styles.genSecBtnActive
                            }
                            onClick={() => {
                              let familyHistoryObj =
                                localStorage.getItem("familyHistoryObj") == null
                                  ? {}
                                  : JSON.parse(
                                      localStorage.getItem("familyHistoryObj")
                                    );
                              familyHistoryObj[ele["itemName"]] =
                                familyHistoryObj[ele["itemName"]] == null
                                  ? {}
                                  : familyHistoryObj[ele["itemName"]];
                              if (
                                !(
                                  val["displayLabel"] in
                                  familyHistoryObj[ele["itemName"]]
                                )
                              ) {
                                if (
                                  ele["itemName"] == "Hypertensive" ||
                                  ele["itemName"] == "Diabetes" ||
                                  ele["itemName"] == "Heart Disease" ||
                                  ele["itemName"] == "Thyroid Problem"
                                )
                                  familyHistoryObj[ele["itemName"]] =
                                    JSON.parse(
                                      localStorage.getItem("familyHistoryObj")
                                    ) == null ||
                                    JSON.parse(
                                      localStorage.getItem("familyHistoryObj")
                                    )[ele["itemName"]] == null
                                      ? {}
                                      : (familyHistoryObj[
                                          ele["itemName"]
                                        ] = JSON.parse(
                                          localStorage.getItem(
                                            "familyHistoryObj"
                                          )
                                        )[ele["itemName"]]);
                                else familyHistoryObj[ele["itemName"]] = {};
                              }
                              familyHistoryObj[ele["itemName"]][
                                val["displayLabel"]
                              ] =
                                familyHistoryObj[ele["itemName"]][
                                  val["displayLabel"]
                                ] == null ||
                                !familyHistoryObj[ele["itemName"]][
                                  val["displayLabel"]
                                ]
                                  ? true
                                  : false;
                              localStorage.setItem(
                                "familyHistoryObj",
                                JSON.stringify(familyHistoryObj)
                              );

                              setPrompt(Math.random());

                              props.setCreateDsStateChange(
                                JSON.stringify(familyHistoryObj)
                              );
                            }}
                          >
                            {val["displayLabel"]}
                          </Button>
                        );
                      })
                    )}
                  </div>
                </div>
              );
            });
    }
    setHistoryOfPresentIllnessContent(
      <div className={styles.scrollleft}>
        <div className={styles.vitalsDiv}>
          <div className={styles.vitalsHead}>
            {/* <h3>{mainHeading[pageNumber]}</h3> */}
          </div>
          <div className={styles.generalsBody}>{sectionContent[0]}</div>
        </div>
      </div>
    );

    // else if (historyOfIllnessSelectedOne != "CNS Examination") {
    //   console.log("allPagesOfSelectedOne", allPagesOfSelectedOne);
    //   let sectionContent = [];
    //   let mainHeading = [];
    //   for (let i in allPagesOfSelectedOne) {
    //     mainHeading[i] = allPagesOfSelectedOne[i]["question"].trim();
    //     let sectionsOfThePage = JSON.parse(
    //       allPagesOfSelectedOne[i]["questionOptionsXml"]
    //     )["subitems"];
    //     console.log("sectionsOfThePage", sectionsOfThePage);
    //   }
    // }
    // else if (historyOfIllnessSelectedOne === "Vitals")
  };

  return (
    <>
      <div className={classes.leftPaneHeaderDSCreate}>
        <div className={classes.leftHeaderImageContainer}>
          <img
            alt=""
            className={classes.leftHeaderImage}
            src="https://www.zilliondesigns.com/images/portfolio/healthcare-hospital/iStock-471629610-Converted.png"
          ></img>
        </div>
        <div className={classes.leftHeaderHeading}>
          <div className={classes.leftHeaderHeadingTitle}>
            <Button
              className={classes.createPageClinicNameBtn}
              onClick={() =>
                props.setRedirect(<Redirect to="/dischargeSummaryPage" />)
              }
            >
              {localStorage.getItem("clinicName")}
            </Button>
          </div>
          <div className={classes.leftHeaderSubHeading}>
            {localStorage.getItem("doctorName")}
          </div>
        </div>
        <HamburgerDropdown></HamburgerDropdown>
      </div>
      <div className={classes.leftPaneSearchCreatePage}></div>
      <div className={classes.leftPaneContentCreate}>
        <div className={classes.leftHeaders}>
          <div className={styles.phyExamMainHead}>
            <h4>Family History</h4>
            <hr />
          </div>
        </div>
        <div className={styles.physicalExamContent}>
          {historyOfPresentIllnessContent}
        </div>
      </div>
    </>
  );
};

export default DSCreateLeftPaneFamilyHistory;

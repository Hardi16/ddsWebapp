import React, { useState, useEffect } from "react";
import { Button, Badge } from "react-bootstrap";
import styles from "./Styles.module.css";
import classes from "../pages/DischargeSummary/DischargeSummary.module.css";
import { hostAddress } from "../assets/config";
import { currentServer } from "../assets/config";
import { Redirect } from "react-router";
import HamburgerDropdown from "./HamburgerDropdown";
import SearchDiagnosis from "./SearchDiagnosis";
import axios from "axios";
import convert from "xml-js";

const DSCreateLeftPaneChiefComplaint = (props) => {
  const [content, setContent] = useState(null);
  const [prompt, setPrompt] = useState(null);
  const [complaints, setComplaints] = useState([]);

  useEffect(() => {
    let data = { checkInType: "Doctor Triage" };
    axios.defaults.headers.common["X-Requested-With"] = "XMLHttpRequest";
    axios
      .put(
        hostAddress +
          currentServer +
          "/RestEasy/PatientWebService/getComplaintForDoctorTriaging",
        data
      )
      .then((response) => {
        console.log("getComplaintForDoctorTriaging resp", response.data);
        let arr = response.data;
        setComplaints(arr);
        let arrContent = arr.map((item) => {
          return (
            <Button
              variant="primary"
              className={
                JSON.parse(localStorage.getItem("chiefComplaintObj")) == null ||
                JSON.parse(localStorage.getItem("chiefComplaintObj"))[
                  item["complaintText"]
                ] == null ||
                !JSON.parse(localStorage.getItem("chiefComplaintObj"))[
                  item["complaintText"]
                ]
                  ? styles.toxicityInactive
                  : styles.toxicityActive
              }
              onClick={() => {
                let obj =
                  JSON.parse(localStorage.getItem("chiefComplaintObj")) ==
                    null ||
                  JSON.parse(localStorage.getItem("chiefComplaintObj"))[
                    item["complaintText"]
                  ] == null
                    ? {}
                    : JSON.parse(localStorage.getItem("chiefComplaintObj"));
                obj[item["complaintText"]] =
                  obj == {} || obj[item["complaintText"]] ? false : true;
                localStorage.setItem("chiefComplaintObj", JSON.stringify(obj));
                setPrompt(Math.random());
                props.setCreateDsStateChange(JSON.stringify(obj));
              }}
            >
              {item["complaintText"]}
            </Button>
          );
        });
        setContent(
          <div className={styles.scrollleft}>
            <div className={styles.vitalsDiv}>
              <div className={styles.vitalsHead}></div>
              <div className={styles.generalsBody}>{arrContent}</div>
            </div>
          </div>
        );
      })
      .catch((err) => console.log("err", err));
  }, [props.leftPrompt, prompt]);
  const handleSearch = (e) => {
    let val = e.target.value;
    let compArr = complaints;
    let arrContent = compArr.map((item) => {
      if (
        item["complaintText"]
          .toString()
          .toUpperCase()
          .startsWith(val.toUpperCase())
      )
        return (
          <Button
            variant="primary"
            className={
              JSON.parse(localStorage.getItem("chiefComplaintObj")) == null ||
              JSON.parse(localStorage.getItem("chiefComplaintObj"))[
                item["complaintText"]
              ] == null ||
              !JSON.parse(localStorage.getItem("chiefComplaintObj"))[
                item["complaintText"]
              ]
                ? styles.toxicityInactive
                : styles.toxicityActive
            }
            onClick={() => {
              let obj =
                JSON.parse(localStorage.getItem("chiefComplaintObj")) == null ||
                JSON.parse(localStorage.getItem("chiefComplaintObj"))[
                  item["complaintText"]
                ] == null
                  ? {}
                  : JSON.parse(localStorage.getItem("chiefComplaintObj"));
              obj[item["complaintText"]] =
                obj == {} || obj[item["complaintText"]] ? false : true;
              localStorage.setItem("chiefComplaintObj", JSON.stringify(obj));
              setPrompt(Math.random());
              props.setCreateDsStateChange(JSON.stringify(obj));
            }}
          >
            {item["complaintText"]}
          </Button>
        );
    });
    setContent(
      <div className={styles.scrollleft}>
        <div className={styles.vitalsDiv}>
          <div className={styles.vitalsHead}></div>
          <div className={styles.generalsBody}>{arrContent}</div>
        </div>
      </div>
    );
  };
  return (
    <>
      <div className={classes.leftPaneSearchCreatePage}></div>
      <div className={classes.leftPaneContentCreate}>
        <div className={classes.leftHeaders}>
          <div className={styles.phyExamMainHead}>
            <h4>Chief Complaint</h4>
            <hr />
          </div>
        </div>
        <div className={styles.searchBarAndDropdown}>
          <div>
            <input
              className={styles.searchBarChiefComplaint}
              placeholder="Search"
              onChange={(e) => {
                handleSearch(e);
              }}
            ></input>
          </div>
          <div className={styles.DropdownChiefComplaint}>dropdown</div>
        </div>
        <div className={styles.physicalExamContent}>{content}</div>
      </div>
    </>
  );
};

export default DSCreateLeftPaneChiefComplaint;
